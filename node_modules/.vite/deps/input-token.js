import {
  require_react
} from "./chunk-ZMLY2J2T.js";
import {
  __toESM
} from "./chunk-4B2QHNJT.js";

// node_modules/tslib/tslib.es6.mjs
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}

// node_modules/input-token/dist/index.esm.js
var import_react = __toESM(require_react());
var InputToken = function(props) {
  var name = props.name, onKeyDown = props.onKeyDown, length = props.length, id = props.id, className = props.className, onChange = props.onChange;
  var _a = (0, import_react.useState)(Array(length).fill(void 0)), value = _a[0], setValue = _a[1];
  var tokenInputRef = (0, import_react.useRef)(null);
  (0, import_react.useEffect)(function() {
    var newValue = Array(length).fill("");
    value.forEach(function(v, i) {
      newValue[i] = v;
    });
    setValue(newValue);
  }, [length]);
  (0, import_react.useEffect)(function() {
    onChange === null || onChange === void 0 ? void 0 : onChange(value.join(""));
  }, [value]);
  var onInputChange = function(value2, index) {
    var _a2, _b, _c, _d;
    if (value2) {
      if (index < length - 1) {
        (_b = (_a2 = tokenInputRef.current) === null || _a2 === void 0 ? void 0 : _a2.children[index + 1]) === null || _b === void 0 ? void 0 : _b.focus();
      }
    } else {
      if (index > 0) {
        (_d = (_c = tokenInputRef.current) === null || _c === void 0 ? void 0 : _c.children[index - 1]) === null || _d === void 0 ? void 0 : _d.focus();
      }
    }
  };
  var onInputKeyDown = function(event) {
    if (onKeyDown)
      onKeyDown(event);
  };
  return import_react.default.createElement("div", {
    ref: tokenInputRef,
    // @ts-expect-error  token input container name attribute
    name,
    tabIndex: -1,
    className: "tokenInputContainer"
  }, Array.from({ length }).map(function(_digit, idx) {
    return import_react.default.createElement("input", { onChange: function(e) {
      var newValue = __spreadArray([], value, true);
      newValue[idx] = e.target.value;
      setValue(newValue);
      onInputChange(e.target.value, idx);
    }, value: value[idx], onKeyDown: onInputKeyDown, maxLength: 1, name: name && "".concat(name, "[").concat(idx, "]"), id, className });
  }));
};
export {
  InputToken as default
};
//# sourceMappingURL=input-token.js.map
